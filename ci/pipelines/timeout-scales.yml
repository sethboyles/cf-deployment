## ======================================================================
## GENERATED FILE. DO NOT EDIT
## ======================================================================

resource_types:
- name: toolsmiths-cf-pool
  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource
resources:
- icon: github
  name: cf-deployment
  type: git
  source:
    branch: release-candidate
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-deployment.git
- icon: github
  name: cf-deployment-concourse-tasks
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
  type: git
- icon: github
  name: runtime-ci
  source:
    uri: https://github.com/cloudfoundry/runtime-ci.git
  type: git
- icon: github
  name: cf-acceptance-tests
  source:
    branch: release-candidate
    private_key: ((cf_acceptance_tests_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git
  type: git
- icon: pool
  name: env-1.1
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-1.2
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-1.3
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-1.4
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-1.5
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-1.6
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-1.7
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-1.8
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-1.9
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
- icon: pool
  name: env-2
  type: toolsmiths-cf-pool
  source:
    api_token: ((toolsmiths_api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
groups:
- name: scale-1.1
  jobs:
  - claim-env-1.1
  - deploy-cf-1.1
  - run-smoke-tests-1.1
  - run-cats-1.1-5
  - run-cats-1.1-6
  - run-cats-1.1-7
  - run-cats-1.1-8
  - run-cats-1.1-9
  - run-cats-1.1-10
  - run-cats-1.1-11
  - run-cats-1.1-12
  - run-cats-1.1-13
  - run-cats-1.1-14
  - run-cats-1.1-15
  - unclaim-env-1.1
  - unclaim-env-manual-1.1
- name: scale-1.2
  jobs:
  - claim-env-1.2
  - deploy-cf-1.2
  - run-smoke-tests-1.2
  - run-cats-1.2-5
  - run-cats-1.2-6
  - run-cats-1.2-7
  - run-cats-1.2-8
  - run-cats-1.2-9
  - run-cats-1.2-10
  - run-cats-1.2-11
  - run-cats-1.2-12
  - run-cats-1.2-13
  - run-cats-1.2-14
  - run-cats-1.2-15
  - unclaim-env-1.2
  - unclaim-env-manual-1.2
- name: scale-1.3
  jobs:
  - claim-env-1.3
  - deploy-cf-1.3
  - run-smoke-tests-1.3
  - run-cats-1.3-5
  - run-cats-1.3-6
  - run-cats-1.3-7
  - run-cats-1.3-8
  - run-cats-1.3-9
  - run-cats-1.3-10
  - run-cats-1.3-11
  - run-cats-1.3-12
  - run-cats-1.3-13
  - run-cats-1.3-14
  - run-cats-1.3-15
  - unclaim-env-1.3
  - unclaim-env-manual-1.3
- name: scale-1.4
  jobs:
  - claim-env-1.4
  - deploy-cf-1.4
  - run-smoke-tests-1.4
  - run-cats-1.4-5
  - run-cats-1.4-6
  - run-cats-1.4-7
  - run-cats-1.4-8
  - run-cats-1.4-9
  - run-cats-1.4-10
  - run-cats-1.4-11
  - run-cats-1.4-12
  - run-cats-1.4-13
  - run-cats-1.4-14
  - run-cats-1.4-15
  - unclaim-env-1.4
  - unclaim-env-manual-1.4
- name: scale-1.5
  jobs:
  - claim-env-1.5
  - deploy-cf-1.5
  - run-smoke-tests-1.5
  - run-cats-1.5-5
  - run-cats-1.5-6
  - run-cats-1.5-7
  - run-cats-1.5-8
  - run-cats-1.5-9
  - run-cats-1.5-10
  - run-cats-1.5-11
  - run-cats-1.5-12
  - run-cats-1.5-13
  - run-cats-1.5-14
  - run-cats-1.5-15
  - unclaim-env-1.5
  - unclaim-env-manual-1.5
- name: scale-1.6
  jobs:
  - claim-env-1.6
  - deploy-cf-1.6
  - run-smoke-tests-1.6
  - run-cats-1.6-5
  - run-cats-1.6-6
  - run-cats-1.6-7
  - run-cats-1.6-8
  - run-cats-1.6-9
  - run-cats-1.6-10
  - run-cats-1.6-11
  - run-cats-1.6-12
  - run-cats-1.6-13
  - run-cats-1.6-14
  - run-cats-1.6-15
  - unclaim-env-1.6
  - unclaim-env-manual-1.6
- name: scale-1.7
  jobs:
  - claim-env-1.7
  - deploy-cf-1.7
  - run-smoke-tests-1.7
  - run-cats-1.7-5
  - run-cats-1.7-6
  - run-cats-1.7-7
  - run-cats-1.7-8
  - run-cats-1.7-9
  - run-cats-1.7-10
  - run-cats-1.7-11
  - run-cats-1.7-12
  - run-cats-1.7-13
  - run-cats-1.7-14
  - run-cats-1.7-15
  - unclaim-env-1.7
  - unclaim-env-manual-1.7
- name: scale-1.8
  jobs:
  - claim-env-1.8
  - deploy-cf-1.8
  - run-smoke-tests-1.8
  - run-cats-1.8-5
  - run-cats-1.8-6
  - run-cats-1.8-7
  - run-cats-1.8-8
  - run-cats-1.8-9
  - run-cats-1.8-10
  - run-cats-1.8-11
  - run-cats-1.8-12
  - run-cats-1.8-13
  - run-cats-1.8-14
  - run-cats-1.8-15
  - unclaim-env-1.8
  - unclaim-env-manual-1.8
- name: scale-1.9
  jobs:
  - claim-env-1.9
  - deploy-cf-1.9
  - run-smoke-tests-1.9
  - run-cats-1.9-5
  - run-cats-1.9-6
  - run-cats-1.9-7
  - run-cats-1.9-8
  - run-cats-1.9-9
  - run-cats-1.9-10
  - run-cats-1.9-11
  - run-cats-1.9-12
  - run-cats-1.9-13
  - run-cats-1.9-14
  - run-cats-1.9-15
  - unclaim-env-1.9
  - unclaim-env-manual-1.9
- name: scale-2
  jobs:
  - claim-env-2
  - deploy-cf-2
  - run-smoke-tests-2
  - run-cats-2-5
  - run-cats-2-6
  - run-cats-2-7
  - run-cats-2-8
  - run-cats-2-9
  - run-cats-2-10
  - run-cats-2-11
  - run-cats-2-12
  - run-cats-2-13
  - run-cats-2-14
  - run-cats-2-15
  - unclaim-env-2
  - unclaim-env-manual-2
jobs:
- name: claim-env-1.1
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.1
    timeout: 4h
- name: deploy-cf-1.1
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        trigger: true
        passed:
        - claim-env-1.1
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.1
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.1
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.1
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.1
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.1
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.1
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - deploy-cf-1.1
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.1-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-smoke-tests-1.1
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.1-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.1-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.1-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.1-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.1-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.1-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.1-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.1-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.1-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.1-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.1
        passed:
        - run-cats-1.1-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.1
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.1/metadata
        TIMEOUT_SCALE: 1.1
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.1
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.1
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.1
  plan:
  - get: env-1.1
    passed:
    - run-cats-1.1-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.1/metadata
    put: env-1.1
  serial: true
- name: unclaim-env-manual-1.1
  plan:
  - get: env-1.1
  - params:
      action: unclaim
      env_file: env-1.1/metadata
    put: env-1.1
  serial: true
- name: claim-env-1.2
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.2
    timeout: 4h
- name: deploy-cf-1.2
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        trigger: true
        passed:
        - claim-env-1.2
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.2
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.2
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.2
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.2
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.2
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.2
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - deploy-cf-1.2
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.2-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-smoke-tests-1.2
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.2-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.2-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.2-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.2-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.2-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.2-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.2-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.2-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.2-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.2-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.2
        passed:
        - run-cats-1.2-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.2/metadata
        TIMEOUT_SCALE: 1.2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.2
  plan:
  - get: env-1.2
    passed:
    - run-cats-1.2-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.2/metadata
    put: env-1.2
  serial: true
- name: unclaim-env-manual-1.2
  plan:
  - get: env-1.2
  - params:
      action: unclaim
      env_file: env-1.2/metadata
    put: env-1.2
  serial: true
- name: claim-env-1.3
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.3
    timeout: 4h
- name: deploy-cf-1.3
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        trigger: true
        passed:
        - claim-env-1.3
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.3
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.3
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.3
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.3
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.3
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.3
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - deploy-cf-1.3
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.3-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-smoke-tests-1.3
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.3-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.3-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.3-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.3-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.3-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.3-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.3-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.3-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.3-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.3-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.3
        passed:
        - run-cats-1.3-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.3
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.3/metadata
        TIMEOUT_SCALE: 1.3
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.3
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.3
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.3
  plan:
  - get: env-1.3
    passed:
    - run-cats-1.3-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.3/metadata
    put: env-1.3
  serial: true
- name: unclaim-env-manual-1.3
  plan:
  - get: env-1.3
  - params:
      action: unclaim
      env_file: env-1.3/metadata
    put: env-1.3
  serial: true
- name: claim-env-1.4
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.4
    timeout: 4h
- name: deploy-cf-1.4
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        trigger: true
        passed:
        - claim-env-1.4
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.4
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.4
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.4
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.4
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.4
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.4
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - deploy-cf-1.4
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.4-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-smoke-tests-1.4
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.4-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.4-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.4-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.4-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.4-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.4-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.4-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.4-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.4-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.4-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.4
        passed:
        - run-cats-1.4-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.4
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.4/metadata
        TIMEOUT_SCALE: 1.4
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.4
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.4
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.4
  plan:
  - get: env-1.4
    passed:
    - run-cats-1.4-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.4/metadata
    put: env-1.4
  serial: true
- name: unclaim-env-manual-1.4
  plan:
  - get: env-1.4
  - params:
      action: unclaim
      env_file: env-1.4/metadata
    put: env-1.4
  serial: true
- name: claim-env-1.5
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.5
    timeout: 4h
- name: deploy-cf-1.5
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        trigger: true
        passed:
        - claim-env-1.5
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.5
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.5
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.5
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.5
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.5
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - deploy-cf-1.5
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.5-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-smoke-tests-1.5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.5-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.5-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.5-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.5-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.5-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.5-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.5-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.5-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.5-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.5-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.5
        passed:
        - run-cats-1.5-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.5
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.5/metadata
        TIMEOUT_SCALE: 1.5
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.5
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.5
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.5
  plan:
  - get: env-1.5
    passed:
    - run-cats-1.5-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.5/metadata
    put: env-1.5
  serial: true
- name: unclaim-env-manual-1.5
  plan:
  - get: env-1.5
  - params:
      action: unclaim
      env_file: env-1.5/metadata
    put: env-1.5
  serial: true
- name: claim-env-1.6
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.6
    timeout: 4h
- name: deploy-cf-1.6
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        trigger: true
        passed:
        - claim-env-1.6
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.6
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.6
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.6
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.6
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.6
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - deploy-cf-1.6
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.6-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-smoke-tests-1.6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.6-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.6-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.6-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.6-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.6-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.6-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.6-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.6-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.6-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.6-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.6
        passed:
        - run-cats-1.6-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.6
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.6/metadata
        TIMEOUT_SCALE: 1.6
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.6
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.6
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.6
  plan:
  - get: env-1.6
    passed:
    - run-cats-1.6-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.6/metadata
    put: env-1.6
  serial: true
- name: unclaim-env-manual-1.6
  plan:
  - get: env-1.6
  - params:
      action: unclaim
      env_file: env-1.6/metadata
    put: env-1.6
  serial: true
- name: claim-env-1.7
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.7
    timeout: 4h
- name: deploy-cf-1.7
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        trigger: true
        passed:
        - claim-env-1.7
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.7
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.7
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.7
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.7
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.7
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - deploy-cf-1.7
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.7-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-smoke-tests-1.7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.7-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.7-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.7-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.7-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.7-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.7-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.7-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.7-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.7-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.7-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.7
        passed:
        - run-cats-1.7-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.7
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.7/metadata
        TIMEOUT_SCALE: 1.7
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.7
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.7
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.7
  plan:
  - get: env-1.7
    passed:
    - run-cats-1.7-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.7/metadata
    put: env-1.7
  serial: true
- name: unclaim-env-manual-1.7
  plan:
  - get: env-1.7
  - params:
      action: unclaim
      env_file: env-1.7/metadata
    put: env-1.7
  serial: true
- name: claim-env-1.8
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.8
    timeout: 4h
- name: deploy-cf-1.8
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        trigger: true
        passed:
        - claim-env-1.8
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.8
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.8
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.8
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.8
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.8
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - deploy-cf-1.8
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.8-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-smoke-tests-1.8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.8-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.8-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.8-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.8-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.8-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.8-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.8-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.8-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.8-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.8-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.8
        passed:
        - run-cats-1.8-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.8
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.8/metadata
        TIMEOUT_SCALE: 1.8
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.8
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.8
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.8
  plan:
  - get: env-1.8
    passed:
    - run-cats-1.8-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.8/metadata
    put: env-1.8
  serial: true
- name: unclaim-env-manual-1.8
  plan:
  - get: env-1.8
  - params:
      action: unclaim
      env_file: env-1.8/metadata
    put: env-1.8
  serial: true
- name: claim-env-1.9
  serial: true
  plan:
  - params:
      action: claim
    put: env-1.9
    timeout: 4h
- name: deploy-cf-1.9
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        trigger: true
        passed:
        - claim-env-1.9
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-1.9
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-1.9
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.9
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-1.9
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-1.9
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-1.9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - deploy-cf-1.9
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-1.9-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-smoke-tests-1.9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-1.9-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-1.9-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-1.9-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-1.9-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-1.9-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-1.9-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-1.9-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-1.9-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-1.9-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-1.9-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-1.9
        passed:
        - run-cats-1.9-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-1.9
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-1.9/metadata
        TIMEOUT_SCALE: 1.9
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-1.9
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-1.9
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-1.9
  plan:
  - get: env-1.9
    passed:
    - run-cats-1.9-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-1.9/metadata
    put: env-1.9
  serial: true
- name: unclaim-env-manual-1.9
  plan:
  - get: env-1.9
  - params:
      action: unclaim
      env_file: env-1.9/metadata
    put: env-1.9
  serial: true
- name: claim-env-2
  serial: true
  plan:
  - params:
      action: claim
    put: env-2
    timeout: 4h
- name: deploy-cf-2
  serial: true
  public: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        trigger: true
        passed:
        - claim-env-2
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
  - file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      IGNORE_ERRORS: "true"
    task: bosh-delete-cf-deployment
  - file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      toolsmiths-env: env-2
    task: bosh-cleanup
  - task: update-cloud-config
    input_mapping:
      toolsmiths-env: env-2
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      inputs:
      - name: toolsmiths-env
      - name: cf-deployment-concourse-tasks
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/update-vm-types.yml
          ---
          - type: replace
            path: /vm_types
            value:
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: default
            - cloud_properties:
                machine_type: e2-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: minimal
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: sharedcpu
            - cloud_properties:
                machine_type: e2-medium
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highmem
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: large
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: extra-large
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: small-highcpu
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: medium-highmem
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-1
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-2
            - cloud_properties:
                machine_type: n1-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-4
            - cloud_properties:
                machine_type: n1-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-8
            - cloud_properties:
                machine_type: n1-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-16
            - cloud_properties:
                machine_type: n1-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-standard-32
            - cloud_properties:
                machine_type: n1-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-2
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-4
            - cloud_properties:
                machine_type: n1-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-8
            - cloud_properties:
                machine_type: n1-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-16
            - cloud_properties:
                machine_type: n1-highmem-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highmem-32
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-2
            - cloud_properties:
                machine_type: n1-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-4
            - cloud_properties:
                machine_type: n1-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-8
            - cloud_properties:
                machine_type: n1-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-16
            - cloud_properties:
                machine_type: n1-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: n1-highcpu-32
            - cloud_properties:
                machine_type: e2-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-2
            - cloud_properties:
                machine_type: e2-standard-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-4
            - cloud_properties:
                machine_type: e2-standard-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-8
            - cloud_properties:
                machine_type: e2-standard-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-16
            - cloud_properties:
                machine_type: e2-standard-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-standard-32
            - cloud_properties:
                machine_type: e2-highmem-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-2
            - cloud_properties:
                machine_type: e2-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-4
            - cloud_properties:
                machine_type: e2-highmem-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-8
            - cloud_properties:
                machine_type: e2-highmem-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highmem-16
            - cloud_properties:
                machine_type: e2-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-2
            - cloud_properties:
                machine_type: e2-highcpu-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-4
            - cloud_properties:
                machine_type: e2-highcpu-8
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-8
            - cloud_properties:
                machine_type: e2-highcpu-16
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-16
            - cloud_properties:
                machine_type: e2-highcpu-32
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: e2-highcpu-32
            - cloud_properties:
                machine_type: f1-micro
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: f1-micro
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: g1-small
            - cloud_properties:
                machine_type: n1-standard-1
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.medium
            - cloud_properties:
                machine_type: n1-standard-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: m3.large
            - cloud_properties:
                machine_type: n1-highcpu-2
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: c3.large
            - cloud_properties:
                machine_type: n1-highmem-4
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: r3.xlarge
            - cloud_properties:
                machine_type: g1-small
                root_disk_size_gb: 10
                root_disk_type: pd-balanced
              name: t2.small
          EOT
          bosh cloud-config > /tmp/cloud-config.yml
          bosh interpolate -o /tmp/update-vm-types.yml /tmp/cloud-config.yml > /tmp/updated-cloud-config.yml
          bosh -n update-cloud-config /tmp/updated-cloud-config.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      ops-files: cf-deployment
      toolsmiths-env: env-2
    params:
      OPS_FILES: |
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-2
        params:
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          toolsmiths-env: env-2
        params:
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          toolsmiths-env: env-2
        params:
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks
- name: run-smoke-tests-2
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - deploy-cf-2
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests
- name: run-cats-2-5
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-smoke-tests-2
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 5
    task: run-cats
- name: run-cats-2-6
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-5
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 6
    task: run-cats
- name: run-cats-2-7
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-6
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 7
    task: run-cats
- name: run-cats-2-8
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-7
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 8
    task: run-cats
- name: run-cats-2-9
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-8
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 9
    task: run-cats
- name: run-cats-2-10
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-9
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 10
    task: run-cats
- name: run-cats-2-11
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-10
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 11
    task: run-cats
- name: run-cats-2-12
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-11
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 12
    task: run-cats
- name: run-cats-2-13
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-12
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 13
    task: run-cats
- name: run-cats-2-14
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-13
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 14
    task: run-cats
- name: run-cats-2-15
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: env-2
        passed:
        - run-cats-2-14
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: env-2
      outputs:
      - name: integration-configs
      params:
        TOOLSMITHS_ENV_METADATA: env-2/metadata
        TIMEOUT_SCALE: 2
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' $TOOLSMITHS_ENV_METADATA | cut -d. -f2-)"
          cd integration-configs
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": $TIMEOUT_SCALE,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: env-2
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
      toolsmiths-env: env-2
    params:
      CONFIG_FILE_PATH: integration-config.json
      NODES: 15
    task: run-cats
- name: unclaim-env-2
  plan:
  - get: env-2
    passed:
    - run-cats-2-15
    trigger: true
  - params:
      action: unclaim
      env_file: env-2/metadata
    put: env-2
  serial: true
- name: unclaim-env-manual-2
  plan:
  - get: env-2
  - params:
      action: unclaim
      env_file: env-2/metadata
    put: env-2
  serial: true
